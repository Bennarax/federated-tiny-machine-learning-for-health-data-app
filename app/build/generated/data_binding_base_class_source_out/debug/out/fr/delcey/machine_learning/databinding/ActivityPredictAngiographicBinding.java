// Generated by view binder compiler. Do not edit!
package fr.delcey.machine_learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import fr.delcey.machine_learning.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPredictAngiographicBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button angiographicButtonGetResult;

  @NonNull
  public final EditText angiographicEdittextChol;

  @NonNull
  public final EditText angiographicEdittextThalach;

  @NonNull
  public final EditText angiographicEdittextTrestbps;

  @NonNull
  public final TextView angiographicTextviewChol;

  @NonNull
  public final TextView angiographicTextviewResult;

  @NonNull
  public final TextView angiographicTextviewThalach;

  @NonNull
  public final TextView angiographicTextviewTitle;

  @NonNull
  public final TextView angiographicTextviewTrestbps;

  @NonNull
  public final Button buttonAngiographicToPredictMenu;

  private ActivityPredictAngiographicBinding(@NonNull LinearLayout rootView,
      @NonNull Button angiographicButtonGetResult, @NonNull EditText angiographicEdittextChol,
      @NonNull EditText angiographicEdittextThalach, @NonNull EditText angiographicEdittextTrestbps,
      @NonNull TextView angiographicTextviewChol, @NonNull TextView angiographicTextviewResult,
      @NonNull TextView angiographicTextviewThalach, @NonNull TextView angiographicTextviewTitle,
      @NonNull TextView angiographicTextviewTrestbps,
      @NonNull Button buttonAngiographicToPredictMenu) {
    this.rootView = rootView;
    this.angiographicButtonGetResult = angiographicButtonGetResult;
    this.angiographicEdittextChol = angiographicEdittextChol;
    this.angiographicEdittextThalach = angiographicEdittextThalach;
    this.angiographicEdittextTrestbps = angiographicEdittextTrestbps;
    this.angiographicTextviewChol = angiographicTextviewChol;
    this.angiographicTextviewResult = angiographicTextviewResult;
    this.angiographicTextviewThalach = angiographicTextviewThalach;
    this.angiographicTextviewTitle = angiographicTextviewTitle;
    this.angiographicTextviewTrestbps = angiographicTextviewTrestbps;
    this.buttonAngiographicToPredictMenu = buttonAngiographicToPredictMenu;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPredictAngiographicBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPredictAngiographicBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_predict_angiographic, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPredictAngiographicBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.angiographic_button_get_result;
      Button angiographicButtonGetResult = ViewBindings.findChildViewById(rootView, id);
      if (angiographicButtonGetResult == null) {
        break missingId;
      }

      id = R.id.angiographic_edittext_chol;
      EditText angiographicEdittextChol = ViewBindings.findChildViewById(rootView, id);
      if (angiographicEdittextChol == null) {
        break missingId;
      }

      id = R.id.angiographic_edittext_thalach;
      EditText angiographicEdittextThalach = ViewBindings.findChildViewById(rootView, id);
      if (angiographicEdittextThalach == null) {
        break missingId;
      }

      id = R.id.angiographic_edittext_trestbps;
      EditText angiographicEdittextTrestbps = ViewBindings.findChildViewById(rootView, id);
      if (angiographicEdittextTrestbps == null) {
        break missingId;
      }

      id = R.id.angiographic_textview_chol;
      TextView angiographicTextviewChol = ViewBindings.findChildViewById(rootView, id);
      if (angiographicTextviewChol == null) {
        break missingId;
      }

      id = R.id.angiographic_textview_result;
      TextView angiographicTextviewResult = ViewBindings.findChildViewById(rootView, id);
      if (angiographicTextviewResult == null) {
        break missingId;
      }

      id = R.id.angiographic_textview_thalach;
      TextView angiographicTextviewThalach = ViewBindings.findChildViewById(rootView, id);
      if (angiographicTextviewThalach == null) {
        break missingId;
      }

      id = R.id.angiographic_textview_title;
      TextView angiographicTextviewTitle = ViewBindings.findChildViewById(rootView, id);
      if (angiographicTextviewTitle == null) {
        break missingId;
      }

      id = R.id.angiographic_textview_trestbps;
      TextView angiographicTextviewTrestbps = ViewBindings.findChildViewById(rootView, id);
      if (angiographicTextviewTrestbps == null) {
        break missingId;
      }

      id = R.id.button_angiographic_to_predict_menu;
      Button buttonAngiographicToPredictMenu = ViewBindings.findChildViewById(rootView, id);
      if (buttonAngiographicToPredictMenu == null) {
        break missingId;
      }

      return new ActivityPredictAngiographicBinding((LinearLayout) rootView,
          angiographicButtonGetResult, angiographicEdittextChol, angiographicEdittextThalach,
          angiographicEdittextTrestbps, angiographicTextviewChol, angiographicTextviewResult,
          angiographicTextviewThalach, angiographicTextviewTitle, angiographicTextviewTrestbps,
          buttonAngiographicToPredictMenu);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
